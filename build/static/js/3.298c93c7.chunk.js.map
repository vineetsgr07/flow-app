{"version":3,"sources":["components/Card/index.tsx","action/node.action.tsx","components/Button/status/index.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","action/workflow.action.tsx","components/Button/remove/index.tsx","container/workflow.tsx"],"names":["Cards","items","children","className","map","item","index","key","id","nextNode","addFirstNode","workflowId","dispatch","type","action","flowId","toastSuccess","setCurrentNode","shuffleNode","toastInfo","deleteLastNode","addNode","text","saveNode","getState","seletedFlowName","node","selectedNode","workFlowName","seletedFlowId","workFlowID","changeNodeStatus","editFlowTitle","editNodeTitle","nodeId","title","editNodeContent","content","clearSelectedNode","Status","status","statusHandler","onClick","e","toLowerCase","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","nextWorkflow","editWorkflowTitle","RmoveBtn","removeHandler","xmlns","bagground-color","width","height","viewBox","d","WorkflowOperations","createWorkflow","filterWorkflow","React","useState","search","setSeach","filter","placeholder","onChange","target","setFilter","name","WorkflowCard","handler","remove","route","toggleStatus","editTitle","setTitle","stopPropagation","disabled","connect","state","workflow","filterItems","add","actions","NodeList","nodes","history","querry","Card","task","routeToNode"],"mappings":"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","file":"static/js/3.298c93c7.chunk.js","sourcesContent":["import React from \"react\";\nimport './style.css';\nimport { workFlowDetails } from \"../../type\";\n\nexport interface CardContent {\n    items: Array<workFlowDetails>\n    children: any\n}\n\nexport const Cards = ({ items, children }: CardContent) => {\n    return <>\n        <div className=\"flex-row m-16\">\n            {\n                items && items.map((item: workFlowDetails, index: any) => {\n                    return <div key={`${index}_item_${item.id}`} className=\"flex-column m-16 card p-16\">\n                        {\n                            children(item)\n                        }\n                    </div>\n                })\n            }\n        </div>\n    </>\n}\n\nexport default Cards;","import * as action from \"./actionsCreators\";\nimport { toastSuccess, toastInfo } from \"../components/Toaster\";\n\nexport let nextNode = 1\n\nexport const addFirstNode = (workflowId: number) => (dispatch: any) => {\n    dispatch({ type: action.ADD_FIRST_NODE, id: nextNode++, flowId: workflowId })\n    toastSuccess(`Workflow ${workflowId} added.`)\n}\n\nexport const setCurrentNode = (flowId: number) => (dispatch: any) => {\n    dispatch({ type: action.SET_CURRENT_NODE, flowId })\n}\n\nexport const shuffleNode = () => (dispatch: any) => {\n    dispatch({ type: action.SHUFFLE_NODE })\n    toastInfo(`Workflow Shuffle.`)\n}\n\nexport const deleteLastNode = () => (dispatch: any) => {\n    dispatch({ type: action.DELETE_LAST_NODE })\n    toastInfo(`Last Node Deleted.`)\n}\n\nexport const addNode = (text: string) => (dispatch: any) => {\n    dispatch({ type: action.ADD_NODE, id: nextNode++, text })\n    toastSuccess(`Node Added.`)\n}\n\nexport const saveNode = () => (dispatch: any, getState: any) => {\n    let seletedFlowName = getState().node.selectedNode.workFlowName\n    let seletedFlowId = getState().node.selectedNode.workFlowID\n\n    dispatch({ type: action.SAVE_NODE })\n    dispatch({ type: action.EDIT_WORKFLOW_TITLE, seletedFlowName, seletedFlowId })\n    toastSuccess(`Node Save.`)\n}\n\nexport const changeNodeStatus = (id: number) => (dispatch: any, getState: any) => {\n    let seletedFlowId = getState().node.selectedNode.workFlowID\n\n    dispatch({ type: action.CHANGE_STATUS, id })\n    dispatch({ type: action.SET_PENDING_WORKFLOW, seletedFlowId })\n}\n\nexport const editFlowTitle = (text: string) => (dispatch: any, getState: any) => {\n    let id = getState().node.selectedNode.workFlowID;\n    dispatch({ type: action.EDIT_FLOW_TITLE, text, id })\n    dispatch({ type: action.EDIT_WORKFLOW_TITLE, text, id });\n}\n\nexport const editNodeTitle = (nodeId: number, title: string) => (dispatch: any) => {\n    dispatch({ type: action.EDIT_NODE_TITLE, nodeId, title })\n}\n\nexport const editNodeContent = (nodeId: number, content: string) => (dispatch: any) => {\n    dispatch({ type: action.EDIT_NODE_CONTENT, nodeId, content })\n}\n\nexport const clearSelectedNode = () => (dispatch: any) => {\n    dispatch({\n        type: action.CLEAR_SELECTED_NODE\n    })\n}\n","import React from \"react\";\nimport './style.css';\n\nconst Status = ({ status, statusHandler }: any) => {\n    return <>\n        <div onClick={(e) => statusHandler(e)} id=\"tickcontainer\">\n            <div className={`tickbg ${status.toLowerCase()}`}>\n                <div className=\"tick\">\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default Status;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { workFlowDetails } from \"../type\";\nimport * as action from \"./actionsCreators\";\nimport { addFirstNode } from \"./node.action\";\nimport { toastSuccess, toastInfo } from \"../components/Toaster\";\n\nlet nextWorkflow = 0\n\nexport const addWorkflow = (text: workFlowDetails) => (dispatch: any) => {\n    let flowId = nextWorkflow++;\n    dispatch({ type: action.ADD_WORKFLOW, id: flowId, text });\n    dispatch(addFirstNode(flowId));\n}\n\nexport const filterWorkflow = (text: string) => (dispatch: any) => {\n    dispatch({ type: action.FILTER_WORKFLOW, text })\n}\n\nexport const deleteWorkflow = (id: number) => (dispatch: any) => {\n    dispatch({ type: action.DELETE_WORKFLOW, id: id })\n    dispatch({ type: action.DELETE_NODE, id })\n    toastInfo(`Workflow deleted.`)\n}\n\nexport const editWorkflowTitle = (id: number) => (dispatch: any) => {\n    dispatch({ type: action.EDIT_WORKFLOW_STATUS, id })\n}\n\nexport const changeWorkflowStatus = (id: number) => (dispatch: any, getState: any) => {\n    let isComplete = getState().node.NodeList\n        .filter((node: any) => node.workFlowID === id)[0].nodes\n        .filter((node: any) => node.status !== 'COMPLETE');\n    if (isComplete.length === 0) {\n        dispatch({ type: action.CHANGE_WORKFLOW_STATUS, id })\n    } else {\n        toastInfo(`Please complete related task .`)\n    }\n}\n\nexport const setPendingWorflow = (id: number) => (dispatch: any, getState: any) => {\n    dispatch({ type: action.SET_PENDING_WORKFLOW, id })\n}","import React from \"react\";\nimport \"./style.css\";\n\nconst RmoveBtn = ({ removeHandler }: any) => {\n    return <>\n        <div className=\"remove-btn\" onClick={(e) => removeHandler(e)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" bagground-color=\"white\" width=\"18\" height=\"18\" viewBox=\"0 0 24 30\"><path d=\"M3 6v18h18v-18h-18zm5 14c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4-18v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712z\" /></svg>\n        </div>\n    </>\n}\n\n\nexport default RmoveBtn;","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Cards } from \"../components/Card\";\nimport * as actions from \"../action/workflow.action\";\nimport { workFlowDetails } from \"../type\";\nimport StatusBtn from \"../components/Button/status\";\nimport RemoveBtn from \"../components/Button/remove\";\nimport \"./style.css\";\n\ninterface workflowT {\n    add: (addWorkflow: any) => void\n    filter: (addWorkflow: any) => void\n    remove: (id: number) => void\n    editTitle: (title: string) => void\n    toggleStatus: (id: number) => void\n    workflow: any\n    history: any\n}\n\nconst Workflow = ({ add, workflow, remove, filter, editTitle, toggleStatus, history }: workflowT) => {\n\n    const routeToNode = (id: number) => {\n        history.push(`/node/${id}`);\n    }\n\n    return (\n        <>\n            <WorkflowOperations\n                createWorkflow={() => add(\"Workflow\")}\n                filterWorkflow={(querry) => filter(querry)}\n            />\n            {\n                workflow.length === 0 ? <div className=\"flex-center\"> No Items Found </div> : <Cards\n                    items={workflow}\n                >\n                    {(task: any) => {\n                        return <WorkflowCard\n                            item={task}\n                            handler={{\n                                route: (id: number) => routeToNode(id),\n                                remove: (id: number) => remove(id),\n                                editTitle: () => editTitle,\n                                toggleStatus: (id: number) => toggleStatus(id)\n                            }} />\n                    }}\n                </Cards>\n            }\n        </>\n    )\n}\n\n\ninterface WorkflowOperationsType {\n    createWorkflow: () => void\n    filterWorkflow: (querry: string) => void\n}\n\nconst WorkflowOperations = ({ createWorkflow, filterWorkflow }: WorkflowOperationsType) => {\n\n    const [search, setSeach] = React.useState('');\n    const setFilter = (e: any) => {\n        setSeach(e.target.value);\n        filterWorkflow(e.target.value);\n    };\n    const filter = () => filterWorkflow(search);\n\n    return (\n        <>\n            <div className=\"flex-row flow-operation flex-space-between\">\n                <div className=\"search-workflow flex-row\">\n                    <div className='m-l-32 m-l-8'>\n                        <input  className=\"search-input\" placeholder=\"Search Workflows\" onChange={(e: any) => setFilter(e)} />\n                    </div>\n                    <div className='m-l-16'>\n                        <button className=\"btn primary-btn rounded-btn\" name=\"Filter\" onClick={(search: any) => filter()}> Filter </button>\n                    </div>\n                </div>\n                <div className=\"creare-workflow m-r-32\">\n                    <button\n                        name=\"Create Workflow\"\n                        className=\"rounded-btn create-btn create-flow\"\n                        type=\"button\"\n                        onClick={() => createWorkflow()}>\n                        Create Workflow\n                    </button>\n                </div>\n            </div>\n        </>\n    )\n}\n\ninterface CardHandlerT {\n    route: (id: number) => void\n    remove: (id: number) => void\n    editTitle: () => void\n    toggleStatus: (id: number) => void\n}\n\ninterface cardP {\n    item: workFlowDetails\n    handler: CardHandlerT\n}\n\nconst WorkflowCard = ({ item: { name, status, id }, handler: { remove, route, toggleStatus, editTitle } }: cardP) => {\n\n    const [title, setTitle] = useState(name);\n\n    return <>\n        <div\n            onClick={() => route(id)}\n            className=\"card-workflow\">\n            <div className=\"right-top\">\n                <RemoveBtn\n                    removeHandler={(e: any) => {\n                        remove(id);\n                        e.stopPropagation();\n                    }}\n                />\n            </div>\n\n            <div className=\"flex-column\">\n                <div>\n                    <input\n                        className=\"title-box\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                            setTitle(e.target.value)\n                        }}\n                        value={title}\n                        disabled\n                    />\n                </div>\n                <div className=\"flex-row m-t-16 flex-space-between\">\n                    <div>{status}</div>\n                    <StatusBtn\n                        statusHandler={(e: any) => {\n                            toggleStatus(id)\n                            e.stopPropagation()\n                        }}\n                        status={status} />\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nconst mapStateToPros = (state: any) => {\n    return {\n        workflow: state.workflow.filterItems\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        add: (item: any) => dispatch(actions.addWorkflow(item)),\n        filter: (id: string) => dispatch(actions.filterWorkflow(id)),\n        remove: (id: number) => dispatch(actions.deleteWorkflow(id)),\n        editTitle: () => dispatch(actions.editWorkflowTitle),\n        toggleStatus: (id: number) => dispatch(actions.changeWorkflowStatus(id))\n    }\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(Workflow);"],"sourceRoot":""}