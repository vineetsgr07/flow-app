{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Card/card.tsx","components/Card/index.tsx","action/workflow.action.tsx","container/workflow.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Card","item","name","status","content","id","handler","deleteCard","route","console","log","onClick","className","Cards","items","map","nextWorkflow","WorkflowOperations","createWorkflow","filterWorkflow","placeholder","type","connect","state","workflow","dipatch","addflow","text","filterflow","deleteflow","deleteWorkflow","changeWorkflowTitle","title","history","push","routeToNode","editTitle"],"mappings":"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","file":"static/js/4.c44275f0.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\nimport React from \"react\";\nimport { workFlowDetails } from \"../../type\";\n\ninterface cardP {\n    item: workFlowDetails\n    // deleteItem: (id: string) => void\n    handler: any\n}\n\nconst Card = ({ item: { name, status, content, id }, handler: { deleteCard, route } }: cardP) => {\n\n    console.log(\"id\", id)\n    return <>\n        <div onClick={() => {\n            console.log(\"id\")\n            return route(id)\n        }\n        } className=\"card\">\n            <button onClick={() => {\n                return deleteCard(id)\n            }\n            }> Delete </button>\n            {name}\n            {status}\n            {content}\n        </div>\n    </>\n}\n\nexport default Card;\n\n","import React from \"react\";\nimport './style.css';\nimport Card from \"./card\";\nimport { workFlowDetails } from \"../../type\";\n\n\nexport interface CardContent {\n    items: Array<workFlowDetails>\n    handler: any\n}\n\nconst Cards = ({ items, ...handler }: CardContent) => {\n\n    return <>\n        <div className=\"flex-row\">\n            {\n                items && items.map((item: workFlowDetails) => {\n                    return <Card item={item} { ...handler } />\n                })\n            }\n        </div>\n    </>\n}\n\n// deleteItem={(id: any) => deleteItems(id)} \n\nexport default Cards;","import { workFlowDetails } from \"../type\";\n\nlet nextWorkflow = 0\n\nexport const ADD_WORKFLOW = 'ADD_WORKFLOW'\nexport const addWorkflow = (text: workFlowDetails) => {\n    return {\n        type: ADD_WORKFLOW,\n        id: nextWorkflow++,\n        text\n    }\n}\n\nexport const FILTER_WORKFLOW = 'FILTER_WORKFLOW'\nexport const filterWorkflow = (text: string) => ({\n    type: FILTER_WORKFLOW,\n    id: nextWorkflow++,\n    text\n})\n\nexport const DELETE_WORKFLOW = 'DELETE_WORKFLOW'\nexport const deleteWorkflow = (id: number) => {\n    return {\n        type: DELETE_WORKFLOW,\n        id: id\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"../components/Card\";\nimport \"./style.css\";\nimport { addWorkflow, filterWorkflow, deleteWorkflow } from \"../action/workflow.action\";\n\nconst workFlowData = [\n    {\n        name: 'Workflow 1',\n        status: 'COMPLETED',\n    },\n    {\n        name: 'Workflow 1',\n        status: 'COMPLETED',\n    }\n]\n\ninterface workflowT {\n    addflow: (addWorkflow: any) => void\n    filterflow: (addWorkflow: any) => void\n    deleteflow: (id: number) => void\n    changeWorkflowTitle: (title: string) => void\n    workflow: any\n    history: any\n}\n\nconst Workflow = ({ addflow, workflow, deleteflow, filterflow, changeWorkflowTitle, history }: workflowT) => {\n\n    const routeToNode = (id: number) => {\n        debugger\n        history.push(`/node/${id}`)\n    }\n\n    return (\n        <>\n            <WorkflowOperations\n                createWorkflow={() => addflow(\"Workflow\")}\n                filterWorkflow={() => filterflow}\n            />\n            <Card\n                items={workflow}\n                handler={\n                    {\n                        route: (id: number) => routeToNode(id),\n                        deleteCard: (id: number) => deleteflow(id),\n                        editTitle: () => changeWorkflowTitle\n                    }\n                }\n            />\n        </>\n    )\n}\n\ninterface WorkflowOperationsType {\n    createWorkflow: () => void\n    filterWorkflow: () => void\n}\n\nconst WorkflowOperations = ({ createWorkflow, filterWorkflow }: WorkflowOperationsType) => {\n    return (\n        <>\n            <div className=\"flex-row\">\n                <div className=\"search-workflow\">\n                    <input placeholder=\"Search Workflows\" />\n                </div>\n                <div className=\"filter-workflow\">\n                    <button name=\"Filter\" onClick={() => filterWorkflow}> Filter </button>\n                </div>\n                <div className=\"creare-workflow\">\n                    <button name=\"Create Workflow\"\n                        type=\"button\"\n                        onClick={() => createWorkflow()}>\n                        Create Workflow\n                    </button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst mapStateToPros = (state: any) => {\n    debugger\n    return {\n        workflow: state.workflow.items\n    }\n}\n\nconst mapDispatchToProps = (dipatch: any) => {\n    return {\n        addflow: (item: any) => dipatch(addWorkflow(item)),\n        filterflow: (id: string) => dipatch(filterWorkflow(id)),\n        deleteflow: (id: number) => dipatch(deleteWorkflow(id)),\n        changeWorkflowTitle: (title: string) => { }\n    }\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(Workflow)\n\n"],"sourceRoot":""}